name: 'Test Inputs'
on:
  workflow_dispatch:
    inputs:
      param_bool:
        type: boolean
        description: Boolean input
        default: false
      param_str:
        type: string
        description: String input
        default: 'false'
      matr_str:
        type: string
        description: String input
        default: '["A", "B", "C"]'
      param_choice:
        type: choice
        description: Choice input yes/no/do-not-know
        options:
          - yes
          - no
          - do-not-know
        default: 'no'
      param_choice_2a:
        type: choice
        description: Choice input opt1/opt2/opt3 and default without quotes
        options:
          - opt1
          - opt2
          - opt3
        default: opt3
      param_choice_2b:
        type: choice
        description: Choice input opt1/opt2/opt3
        options:
          - opt1
          - opt2
          - opt3
        default: 'opt3'
      macos-files:
        type: string
        description: 'Some macOS files to use'
jobs:
  compare-bool-and-str:
    name: 'Compare Boolean and String'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch: ${{ fromJSON(inputs.matr_str) }}
    env:
      result_of_str_cmp: ${{ inputs.param_str == '' }}
      param_bool_in_env: ${{ inputs.param_bool }}
      param_choice_in_env: ${{ inputs.param_choice }}
    steps:
      - name: Print debug info
        run: |
          echo "matrix.arch=${{ matrix.arch }}"
          echo
          echo "param_bool=${{ inputs.param_bool }}"
          echo "inputs.param_bool == true is ${{ inputs.param_bool == true }}"
          echo "inputs.param_bool == false is ${{ inputs.param_bool == false }}"
          echo "inputs.param_bool == 'true' is ${{ inputs.param_bool == 'true' }}"
          echo "inputs.param_bool == 'false' is ${{ inputs.param_bool == 'false' }}"
          echo
          echo "param_str=${{ inputs.param_str }}"
          echo "inputs.param_str == true is ${{ inputs.param_str == true }}"
          echo "inputs.param_str == false is ${{ inputs.param_str == false }}"
          echo "inputs.param_str == 'true' is ${{ inputs.param_str == 'true' }}"
          echo "inputs.param_str == 'false' is ${{ inputs.param_str == 'false' }}"
          echo
          echo "result_of_str_cmp=${{ env.result_of_str_cmp }}"
          echo "env.result_of_str_cmp == true is ${{ env.result_of_str_cmp == true }}"
          echo "env.result_of_str_cmp == false is ${{ env.result_of_str_cmp == false }}"
          echo "env.result_of_str_cmp == 'true' is ${{ env.result_of_str_cmp == 'true' }}"
          echo "env.result_of_str_cmp == 'false' is ${{ env.result_of_str_cmp == 'false' }}"
          echo
          echo "param_choice=${{ inputs.param_choice }}"
          echo "inputs.param_choice == 'yes' is ${{ inputs.param_choice == 'yes' }}"
          echo "inputs.param_choice == 'no' is ${{ inputs.param_choice == 'no' }}"
          echo "inputs.param_choice == 'true' is ${{ inputs.param_choice == 'true' }}"
          echo "inputs.param_choice == 'false' is ${{ inputs.param_choice == 'false' }}"
          echo "inputs.param_choice == true is ${{ inputs.param_choice == true }}"
          echo "inputs.param_choice == false is ${{ inputs.param_choice == false }}"
          echo
          echo "param_bool_in_env=${{ env.param_bool_in_env }}"
          echo "env.param_bool_in_env == true is ${{ env.param_bool_in_env == true }}"
          echo "env.param_bool_in_env == false is ${{ env.param_bool_in_env == false }}"
          echo "env.param_bool_in_env == 'true' is ${{ env.param_bool_in_env == 'true' }}"
          echo "env.param_bool_in_env == 'false' is ${{ env.param_bool_in_env == 'false' }}"
          echo
          echo "param_choice_in_env=${{ env.param_choice_in_env }}"
          echo "env.param_choice_in_env == 'yes' is ${{ env.param_choice_in_env == 'yes' }}"
          echo "env.param_choice_in_env == 'no' is ${{ env.param_choice_in_env == 'no' }}"
          echo "env.param_choice_in_env == 'true' is ${{ env.param_choice_in_env == 'true' }}"
          echo "env.param_choice_in_env == 'false' is ${{ env.param_choice_in_env == 'false' }}"
          echo "env.param_choice_in_env == true is ${{ env.param_choice_in_env == true }}"
          echo "env.param_choice_in_env == false is ${{ env.param_choice_in_env == false }}"
          echo
          echo "param_choice_2a=${{ inputs.param_choice_2a }}"
          echo "inputs.param_choice_2a == 'opt1' is ${{ inputs.param_choice_2a == 'opt1' }}"
          echo "inputs.param_choice_2a == 'opt2' is ${{ inputs.param_choice_2a == 'opt2' }}"
          echo "inputs.param_choice_2a == 'opt3' is ${{ inputs.param_choice_2a == 'opt3' }}"
          echo
          echo "param_choice_2b=${{ inputs.param_choice_2b }}"
          echo "inputs.param_choice_2b == 'opt1' is ${{ inputs.param_choice_2b == 'opt1' }}"
          echo "inputs.param_choice_2b == 'opt2' is ${{ inputs.param_choice_2b == 'opt2' }}"
          echo "inputs.param_choice_2b == 'opt3' is ${{ inputs.param_choice_2b == 'opt3' }}"

  run-helper-wf-1:
    name: Use helper job with param_bool
    uses: ./.github/workflows/helper-wf.yml
    with:
      param_bool: ${{ inputs.param_bool }}
      macos-files: ${{ inputs.macos-files }}
      windows-files: 'library/windows/file-w.h library/windows/file-w.cpp'

  run-helper-wf-2:
    name: Use helper job with evaluated argument
    uses: ./.github/workflows/helper-wf.yml
    with:
      param_bool: ${{ inputs.param_bool == true }}
      macos-files: ${{ inputs.macos-files }}
      windows-files: '"library/windows/file-w.h" "library/windows/file-w.cpp"'

  run-helper-wf-3:
    name: Use helper job with evaluated argument
    uses: ./.github/workflows/helper-wf-3.yml
    with:
      param_bool: ${{ inputs.param_bool == true }}
